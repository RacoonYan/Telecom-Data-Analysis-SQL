-- Wild West wants to know the monthly domestic message revenue by sales region, sales office and sales person. They want this information for business customers and need to see the total number of messages, minutes, and revenue for each salesperson assigned to the customer and totals for each sales office 
WITH
    rev_sale_rep AS (
        SELECT
            SALES_REP_NO,
            ROUND(SUM(COALESCE(REV_AMT, 0)), 2) as month_rev,
            ROUND(SUM(REV_MIN + ROUND(REV_SEC / 60, 2)), 2) as month_min,
            COUNT(*) as num_message
        FROM
            REPASSGN
            LEFT JOIN BMSG9901 ON (
                BILL_AREA_CODE = AREA_CODE
                AND BILL_EXCHANGE = EXCHANGE
                AND BILL_LINE = LINE
            )
        WHERE
            TERM_ST NOT IN (
                SELECT
                    state_code
                FROM
                    domestic_states
            )
            AND TRIM(TERM_ST) <> ''
        GROUP BY
            SALES_REP_NO
    ),
    month_rev_rep AS (
        SELECT
            REP_FIRST_NAME,
            REP_LAST_NAME,
            REP_OFFICE,
            REP_REGION,
            COALESCE(month_rev, 0) as monthly_rev,
            month_min,
            num_message
        FROM
            SALESREP
            LEFT JOIN rev_sale_rep USING (SALES_REP_NO)
    )
SELECT
    REP_OFFICE,
    SUM(monthly_rev) as office_rev
FROM
    month_rev_rep
GROUP BY
    REP_OFFICE
ORDER BY
    office_rev desc
    -- Wild West wants to wants to see a report showing the top ten sales reps for generating domestic business revenue for the 1st quarter of 1999. They would like to see the sales rep name, his or her region, the total domestic business revenue generated and the percentage of total business revenue. On the same report, they want to see the bottom ten reps using the same criterion and also the average amount generated by all sales reps.
WITH
    first_quarter AS (
        SELECT
            *
        FROM
            BMSG9901
        UNION ALL
        SELECT
            *
        FROM
            BMSG9902
        UNION ALL
        SELECT
            *
        FROM
            BMSG9903
    ),
    domestic_revenue_per_salesp AS (
        SELECT
            SALES_REP_NO,
            SUM(CAST(REV_AMT as float)) as domestic_revenue
        FROM
            first_quarter
            RIGHT JOIN REPASSGN ON (
                BILL_AREA_CODE = AREA_CODE
                AND BILL_EXCHANGE = EXCHANGE
                AND BILL_LINE = LINE
            )
        WHERE
            TERM_ST NOT IN (
                SELECT
                    state_code
                FROM
                    domestic_states
            )
            AND TRIM(TERM_ST) <> ''
        GROUP BY
            1
    ),
    total_revenue_per_salesp AS (
        SELECT
            SALES_REP_NO,
            SUM(CAST(REV_AMT as float)) as total_revenue
        FROM
            first_quarter
            RIGHT JOIN REPASSGN ON (
                BILL_AREA_CODE = AREA_CODE
                AND BILL_EXCHANGE = EXCHANGE
                AND BILL_LINE = LINE
            )
        GROUP BY
            1
    ),
    domestic_total_revenue_per_salesp AS (
        SELECT
            SALES_REP_NO,
            domestic_revenue,
            total_revenue
        FROM
            domestic_revenue_per_salesp
            LEFT JOIN total_revenue_per_salesp USING (SALES_REP_NO)
    ),
    sales_per_rep AS (
        SELECT
            RANK() OVER (
                ORDER BY
                    domestic_revenue DESC
            ) AS rank,
            REP_FIRST_NAME,
            REP_LAST_NAME,
            domestic_revenue,
            REP_REGION,
            ROUND((domestic_revenue / total_revenue) * 100, 2) as rev_perc
        FROM
            domestic_total_revenue_per_salesp
            -- FROM (
            --    SELECT SUM(revenue) OVER() as total_rev, RANK() OVER(ORDER BY revenue DESC) AS rank, SALES_REP_NO, revenue           
            --    FROM domestic_revenue_per_salesp   
            -- )
            LEFT JOIN SALESREP USING (SALES_REP_NO)
    ) (
        SELECT
            *
        FROM
            sales_per_rep
        ORDER BY
            domestic_revenue DESC
        LIMIT
            10
    )
UNION ALL
(
    SELECT
        *
    FROM
        sales_per_rep
    ORDER BY
        domestic_revenue
    LIMIT
        10
)
-- Wild West wants a monthly financial summary of all domestic messages by terminating state. They want the total number of messages and revenue for each state and all states. Use January 1999 data for signoff.
WITH
    info_9901 AS (
        SELECT
            COALESCE(TERM_ST, 'info_total_states'),
            SUM(REV_AMT) as revenue,
            COUNT(TERM_ST) as number_of_message
        FROM
            BMSG9901
        WHERE
            TERM_ST IN (
                SELECT
                    state_code
                FROM
                    domestic_states
            )
        GROUP BY
            ROLLUP (TERM_ST)
    ),
    info_9902 AS (
        SELECT
            COALESCE(TERM_ST, 'info_total_states'),
            SUM(REV_AMT) as revenue,
            COUNT(TERM_ST) as number_of_message
        FROM
            BMSG9902
        WHERE
            TERM_ST IN (
                SELECT
                    state_code
                FROM
                    domestic_states
            )
        GROUP BY
            ROLLUP (TERM_ST)
    ),
    info_9903 AS (
        SELECT
            COALESCE(TERM_ST, 'info_total_states'),
            SUM(REV_AMT) as revenue,
            COUNT(TERM_ST) as number_of_message
        FROM
            BMSG9903
        WHERE
            TERM_ST IN (
                SELECT
                    state_code
                FROM
                    domestic_states
            )
        GROUP BY
            ROLLUP (TERM_ST)
    ),
    info_9904 AS (
        SELECT
            COALESCE(TERM_ST, 'info_total_states'),
            SUM(REV_AMT) as revenue,
            COUNT(TERM_ST) as number_of_message
        FROM
            BMSG9904
        WHERE
            TERM_ST IN (
                SELECT
                    state_code
                FROM
                    domestic_states
            )
        GROUP BY
            ROLLUP (TERM_ST)
    ),
    info_0001 AS (
        SELECT
            COALESCE(TERM_ST, 'info_total_states'),
            SUM(REV_AMT) as revenue,
            COUNT(TERM_ST) as number_of_message
        FROM
            BMSG0001
        WHERE
            TERM_ST IN (
                SELECT
                    state_code
                FROM
                    domestic_states
            )
        GROUP BY
            ROLLUP (TERM_ST)
    )
SELECT
    *
FROM
    info_9901
UNION ALL
SELECT
    *
FROM
    info_9902
UNION ALL
SELECT
    *
FROM
    info_9903
UNION ALL
SELECT
    *
FROM
    info_9904
UNION ALL
SELECT
    *
FROM
    info_0001
    -- Wild West wants a switch traffic volume comparisons for international long distance calls. For each switch id, Wild West needs to compare the number of messages and minutes for one month to the same numbers of the following month. To get accurate traffic comparisons, these numbers need to be reported by the CST hour the call was connected. To better do volume planning, they need to also see the percentage change, up of down, in messages and minutes from one month to another for any two given months. Use January and February 1999 data for signoff.
WITH
    switch_9901 AS (
        SELECT
            LOCAL_SW_ID,
            ROUND(SUM(REV_MIN + REV_SEC / 60), 2) as sum_min_9901,
            COUNT(CON_CST) as message_9901
        FROM
            BMSG9901
        WHERE
            TERM_CNTRY <> '  '
            AND CON_CST <= 24
            AND LOCAL_SW_ID <> '  '
        GROUP BY
            LOCAL_SW_ID
    ),
    switch_9902 AS (
        SELECT
            LOCAL_SW_ID,
            ROUND(SUM(CON_MIN + CON_SEC / 60), 2) as sum_min_9902,
            COUNT(CON_CST) as message_9902
        FROM
            BMSG9902
        WHERE
            TERM_CNTRY <> '  '
            AND CON_CST <= 24
            AND LOCAL_SW_ID <> '  '
        GROUP BY
            LOCAL_SW_ID
    )
SELECT
    LOCAL_SW_ID,
    sum_min_9901,
    sum_min_9902,
    round(
        (sum_min_9902 - sum_min_9901) / sum_min_9901 * 100,
        2
    ) as percentage_min,
    message_9901,
    message_9902,
    round(
        (message_9902 - message_9901) / message_9901 * 100,
        2
    ) as percentage_mess
FROM
    SWITCH_9901
    FULL JOIN SWITCH_9902 USING (LOCAL_SW_ID)
ORDER BY
    LOCAL_SW_ID ASC
SELECT
    LOCAL_SW_ID,
    CON_MIN,
    REV_MIN,
    REV_SEC
FROM
    BMSG9901
WHERE
    CON_MIN > 59
    -- Wild West wants to determine which business customers have monthly revenue (for a given month) which exceeds the average per-customer revenue of all business customers for that same month. Use January 1999 data for signoff.
WITH
    customer_rev AS (
        SELECT
            CUST_ID,
            NAME,
            SUM(REV_AMT) as total_rev
        FROM
            BUSCUST
            LEFT JOIN BMSG9901 ON (
                BILL_AREA_CODE = AREA_CODE
                AND BILL_EXCHANGE = EXCHANGE
                AND BILL_LINE = LINE
            )
        WHERE
            REV_AMT <> '  '
        GROUP BY
            CUST_ID,
            NAME
    ),
    avg_rev AS (
        SELECT
            CUST_ID,
            ROUND(AVG(total_rev) OVER (), 2) as avg_rev
        FROM
            customer_rev
    )
SELECT
    CUST_ID,
    NAME,
    total_rev,
    avg_rev
FROM
    customer_rev
    LEFT JOIN avg_rev USING (cust_id)
WHERE
    total_rev > avg_rev
ORDER BY
    total_rev DESC